// Define exportGeometry globally
// provide your own area of interest in exportGeometry variable
var exportGeometry = table.filter(ee.Filter.eq('STATE', 'GUJAR>T'));

var agriimask = ee.ImageCollection("GOOGLE/DYNAMICWORLD/V1").filterDate('2017-01-01', '2017-12-31')
                        .filterBounds(exportGeometry)
                        .mean()
                        .select('crops')
                        .clip(exportGeometry)
                    

// // Function to calculate CDI
var indices = function(month, year) {
    // Import the feature collection for administrative boundaries
    var Germany = table.filter(ee.Filter.eq('STATE', 'GUJAR>T'));
    var geometry = Germany.geometry();

    var startDate = ee.Date.fromYMD(year, month, 1);
    var endDate = startDate.advance(1, 'month');

    // NDVI
    var NDVIdataset = ee.ImageCollection("MODIS/061/MOD13Q1").filter(ee.Filter.date(startDate, endDate));
    var ndvi = NDVIdataset.select('NDVI').mean().clip(geometry);

    // Calculate global min and max for normalization
    var NDVIminMax = ndvi.reduceRegion({
        reducer: ee.Reducer.minMax(),
        geometry: geometry,
        scale: 30,
        maxPixels: 1e13
    });

    var NDVImin = ee.Number(NDVIminMax.get('NDVI_min'));
    var NDVImax = ee.Number(NDVIminMax.get('NDVI_max'));

    // Normalize the NDVI
    var normalizedNDVI = ndvi.expression(
        '(NDVI - min) / (max - min)', {
            'NDVI': ndvi.select('NDVI'),
            'min': NDVImin,
            'max': NDVImax
        }).rename('VCI');

    // LST
    var LSTdataset = ee.ImageCollection("MODIS/061/MOD11A2").filter(ee.Filter.date(startDate, endDate));
    var landSurfaceTemperature = LSTdataset.select('LST_Day_1km').mean().subtract(273.15).clip(geometry);

    // Calculate global min and max for normalization
    var LSTminMax = landSurfaceTemperature.reduceRegion({
        reducer: ee.Reducer.minMax(),
        geometry: geometry,
        scale: 30,
        maxPixels: 1e13
    });

    var LSTmin = ee.Number(LSTminMax.get('LST_Day_1km_min'));
    var LSTmax = ee.Number(LSTminMax.get('LST_Day_1km_max'));

    // Normalize the LST
    var normalizedLST = landSurfaceTemperature.expression(
        '(max - LST) / (max - min)', {
            'LST': landSurfaceTemperature.select('LST_Day_1km'),
            'min': LSTmin,
            'max': LSTmax
        }).rename('TCI');

    // Precipitation
    var PPTdataset = ee.ImageCollection("UCSB-CHG/CHIRPS/DAILY").filter(ee.Filter.date(startDate, endDate));
    var precipitation = PPTdataset.select('precipitation').mean().clip(geometry);

    // Calculate global min and max for normalization
    var PPTminMax = precipitation.reduceRegion({
        reducer: ee.Reducer.minMax(),
        geometry: geometry,
        scale: 30,
        maxPixels: 1e13
    });

    var PPTmin = ee.Number(PPTminMax.get('precipitation_min'));
    var PPTmax = ee.Number(PPTminMax.get('precipitation_max'));

    // Normalize the Precipitation
    var normalizedPrecipitation = precipitation.expression(
        '(precipitation - min) / (max - min)', {
            'precipitation': precipitation.select('precipitation'),
            'min': PPTmin,
            'max': PPTmax
        }).rename('PCI');

    var indices = normalizedNDVI.addBands(normalizedLST).addBands(normalizedPrecipitation);

    // CDI
    var CDI = indices.expression(
        'a * TCI + b * PCI + (1 - a - b) * VCI', {
            'TCI': indices.select('TCI'),
            'PCI': indices.select('PCI'),
            'VCI': indices.select('VCI'),
            'a': 0.25,
            'b': 0.5
        });

    var projectionEPSG3035 = 'EPSG:4326';

    var Resampled_CDI = CDI.reproject({
        crs: projectionEPSG3035,
        scale: 90 // Ensure this scale matches your intended analysis resolution
    });

    // Define exportGeometry
    exportGeometry = geometry;

    // Export the image to Google Drive
    // Export.image.toDrive({
    //     'image': Resampled_CDI,
    //     'description': 'CDI_' + month + '_' + year,
    //     'fileNamePrefix': 'CDI_' + month + '_' + year,
    //     'folder': 'Germany',
    //     'scale': 90,
    //     'region': exportGeometry,
    //     'crs': 'EPSG:4326',
    //     'fileFormat': 'GeoTIFF',
    //     'maxPixels': 1e13,
    //     'formatOptions': {
    //         'cloudOptimized': true
    //     }
    // });

    return Resampled_CDI;
}

var CDI_October = indices(10, 2012);

var imageVisParam = {
  min: 0,
  max: 1,
  palette: ['red','orange','yellow','#00ff00','darkgreen']
}

Map.addLayer(CDI_October,imageVisParam,"CDI_JULY")